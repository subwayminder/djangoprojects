# Generated by Django 2.1.7 on 2019-04-03 20:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('cores', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('threads', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('socket', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('L3_cache', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('bit_depth', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('base_frequency', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('TDP', models.IntegerField(blank=True, default=None, max_length=10, null=True)),
                ('memory_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('num_mem_channels', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('unlocked_multiplier', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессоры',
            },
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('vendor', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('GPU_designer', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('interface', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('GPU_speed', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('GPU_memtype', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('GPU_memsize', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('power_usage', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('VGA', models.BooleanField()),
                ('DVI', models.BooleanField()),
                ('HDMI', models.BooleanField()),
                ('Display_port', models.BooleanField()),
                ('SLI_or_crossfire', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Видеокарта',
                'verbose_name_plural': 'Видеокарты',
            },
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('capacity', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('spin_speed', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('form_factor', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('fail_time', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Жесткий диск',
                'verbose_name_plural': 'Жесткие диски',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('vendor', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('socket', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('chipset', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('memory_form', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('numb_mem_slots', models.IntegerField(blank=True, default=None, max_length=2, null=True)),
                ('usb3', models.BooleanField()),
                ('usb_type_C', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Материнская плата',
                'verbose_name_plural': 'Материнские платы',
            },
        ),
        migrations.CreateModel(
            name='Power_supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('manufacturer', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('power', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('form_factor', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('molex', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('sata', models.IntegerField(blank=True, default=None, max_length=3, null=True)),
                ('mb_cpu_supply', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('Graphic_adapter_supply', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('module_or_semi_module', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Блок питания',
                'verbose_name_plural': 'Блоки питания',
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('vendor', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('memory_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('memory_form', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('memory_size', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('speed', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('latency', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Модуль памяти',
                'verbose_name_plural': 'Модули памяти',
            },
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, default=None, max_length=70, null=True)),
                ('product_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('capacity', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('memory_type', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('interface', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Твердотельный накопитель',
                'verbose_name_plural': 'Твердотельные накопители',
            },
        ),
    ]
